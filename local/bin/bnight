#!/usr/bin/env bash

# Constants ############################################################

NORMAL='\033[0m'
RED='\033[1;31m'
GREEN='\033[1;32m'
BLUE='\033[1;34m'
YELLOW='\033[1;33m'

TIME="2weeks"

# Utility ##############################################################

magenta() { echo "${MAGENTA}$*${NORMAL}"; }
yellow()  { echo "${YELLOW}$*${NORMAL}"; }
green()   { echo "${GREEN}$*${NORMAL}"; }
bold()    { echo "${BOLD}$*${NORMAL}"; }
blue()    { echo "${BLUE}$*${NORMAL}"; }
red()     { echo "${RED}$*${NORMAL}"; }

usage() {
  cat <<- EOM
$(echo -e "$(yellow USAGE):")
       bnight [-h] [-t string]

$(echo -e "$(yellow FLAGS):")
       -h    - show this message
       -t    - specify --changed-within time given to fd command. Defaults to '2weeks'.
EOM
}

get_args() {
  while getopts ":ht:" flag; do
    case "$flag" in
      h)
        usage
        exit 0
        ;;
      t)
        TIME=${OPTARG}
        ;;
      *)
        usage
        exit 1
        ;;
    esac
  done

  shift $((OPTIND - 1))
}

fetch_data() {
  while read -r line; do ## read line at a time from find output on server
    lpath=$(echo "$line" | sed -E 's|/projects/bison/git/./||g')
    folder=$(printf "%-35b" "${YELLOW}${line:22:14}${NORMAL}" | tr ' ' '.')
    file=$(printf "%-80b" "${BLUE}$(basename "$line")${NORMAL}" | tr ' ' '.')

    if [[ -e "$(pwd)/$lpath" ]]; then
      status="${RED}skipping${NORMAL}"
      printf "%s%s%b\n" "$folder" "$file" "$status"
      continue
    else
      status="${GREEN}copying${NORMAL}"
      printf "%s%s%b\n" "$folder" "$file" "$status"
      rsync -aW --inplace --relative falcon1:"$line" "$(pwd)"
    fi

  done < <(ssh -qn falcon1 '$HOME/.config/cargo/bin/fd --type d --max-depth 1 "bison_[0-9]{8}$" /projects/bison/git --changed-within '"$TIME"' -exec printf "%s\n" "{}/assessment" |' \
               'xargs -I{} $HOME/.config/cargo/bin/fd --no-ignore-vcs --type f -a -e csv -E "**/doc/**" -E "**/gold/**" -E "**/SM/**" ".*_metrics" {} |' \
               'sed -E "s|/projects/bison/git/|/projects/bison/git/./|g"')
}

main() {
  get_args "${@}"
  fetch_data
}

main "${@}"
