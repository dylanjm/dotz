#!/usr/bin/env bash
#                  @@@
#               @**+**=+,                      +%#+++
#             @****#####                       @+*++
#             @*@@@@@%#      @@@@%%#*        +=+###-+-@
#              #%@@@@@@+@@=**@@@@@@###:    @=*+%*+   #*-:@
#               @@@@@@@@%+#@*@%@%%###%*****####*      #%%+=
#                #%@@@@@@@@*@@%##@@@@@@@@@%@          @@@@**.:@
#                 %@@@@@@@#@#@@@@@#@#             .==*@@@@@@%#=
#                @%#@@@@@@@@@@@@##.       +#-+**=++*@@%%%@@@%
#              @+@@@%@@@#%@@@@@#***+**+++*%@**######@
#              @%##%@%%###*%#%#@#*##%@@@@##@@@%@
#              @@%%%@@####@@@@#*%@@@@@##@@@
#              **@%%##%@@@@@@@@@@@%%%@
#             @#@@@%@@@@@@@@@@@@@@
#            +#@@@@@@@@@@@@@@@@@#
#               @@@@@@@@@@@@@@@@@
#                @@@@@@@@@@@@@@@@
#                   @@@@@@@@@@@@@
#                      @@@@@@@@@@@
#                       @@@@@@@@@@
#                       @@@@@@@@@@@
#                       @@@@@@@@@@
#                      *@@@@@@@@@@
#                       @@@@@@@@@
#                       @@@@@@@@@
#                      @@@@@@@@@
#                      @@@@@@@@
#                      @@@@@@#
#                     @@@@@@@@@                     88
#                     @@%@@@@@                      88
#                                                   88
# ,adPPYba, 88,dPYba,,adPYba,  ,adPPYYba, ,adPPYba, 88,dPPYba,
# I8[    "" 88P'   "88"    "8a ""     `Y8 I8[    "" 88P'    "8a
#  `"Y8ba,  88      88      88 ,adPPPPP88  `"Y8ba,  88       88
# aa    ]8I 88      88      88 88,    ,88 aa    ]8I 88       88
# `"YbbdP"' 88      88      88 `"8bbdP"Y8 `"YbbdP"' 88       88
#
# smash - The follies of coporate life:
#    An Office Space meme script.
#
# Usage:
#    smash [-h] [-w] CAPTION
#
# Depends on:
#    imagemagick
#    wget
#    osascript (macOS)
#
# Example:
#    smash "This Project"
#    smash -w "Me when I realize this project is due EOD..."
#
# Submit issues to https://github.com/dylanm/teton/issues
#
# MIT License
#
# Copyright (c) 2019-2020 Dylan McDowell
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Notes ################################################################

# Globals ############################################################

# Constants
readonly _ME="$(basename "${0}")"
readonly IMG_URL="https://electricbricks.net/wp-content/uploads/2016/11/office-space-printer.jpg"
readonly DL_TEMP="/tmp/office_space.jpg"
readonly FINAL_IMG="/tmp/smash.jpg"

# Colors
readonly NORMAL='\033[0m'
readonly BOLD='\033[1m'
readonly RED='\033[1;31m'
readonly GREEN='\033[1;32m'
readonly BLUE='\033[1;34m'
readonly MAGENTA='\033[1;4;35m'
readonly YELLOW='\033[1;33m'

# Flags
WHITEBAR=0

# Utilities ############################################################

magenta() { echo "${MAGENTA}$*${NORMAL}"; }
yellow() { echo "${YELLOW}$*${NORMAL}"; }
green() { echo "${GREEN}$*${NORMAL}"; }
bold() { echo "${BOLD}$*${NORMAL}"; }
blue() { echo "${BLUE}$*${NORMAL}"; }
red() { echo "${RED}$*${NORMAL}"; }

usage() {
  cat <<-EOM
	$(echo -e "$(bold "smash - The follies of corporate life")"):
	An Office Space meme script.

	$(echo -e "$(bold USAGE)"):
	    ${_ME} [-h] [-w] CAPTION

	$(echo -e "$(bold FLAGS)"):
	    -h    - show this message
	    -w    - place CAPTION text into white bar above image.

	$(echo -e "$(bold ARGS)"):
	    CAPTION    - the text you want placed in the image or above the image.

	$(echo -e "$(bold EXAMPLES)"):

	To create a meme with the text placed above the broken photocopier, use the
	command:
	    ${_ME} "This Project"

	To create a more classic style meme, with the text placed in a white-bar
	above the image, use the command:
	    ${_ME} -w "Me when I realize this project is due..."

	After running ${_ME}, the meme is instantly placed in your clipboard.
	EOM
}

setup-vars() {
  local office_space
  # If these files already exist then it won't work.
  [[ -e "${DL_TEMP}" ]]   && rm "${DL_TEMP}"
  [[ -e "${FINAL_IMG}" ]] && rm "${FINAL_IMG}"
  # download image to temporary file.
  office_space=$(mktemp "${DL_TEMP}")
  wget --quiet "${IMG_URL}" -O "${office_space}"
}

parse-args() {
  while getopts ":hw" flag; do
    case "$flag" in
      h)
        usage
        exit 0
        ;;
      w)
        # This flag changes the meme format
        WHITEBAR=1
        ;;
      :)
        printf "Invalid Flag"
        exit 1
        ;;
      \?)
        printf "Usage: smash [-h] [-w] CAPTION"
        exit 1
        ;;
    esac
  done
  shift $((OPTIND - 1))
  _MESSAGE="${*}"
}

# Core #################################################################

make_meme() {
  # Depending on flags, create meme and store it in /tmp/smash.jpg
  local caption
  local memefile
  local office_space

  caption="${*}"
  memefile=$(mktemp "${FINAL_IMG}")
  office_space="${DL_TEMP}"

  if [[ ${WHITEBAR:-0} == 1 ]]; then
    convert "${office_space}" \
            -background white \
            -fill black \
            -size ${width}x100 \
            label:"${caption}" \
            +swap \
            -gravity West \
            -append "${memefile}"
  else
    convert "${office_space}" \
            -pointsize 72 \
            -annotate +500+900 \
            "${caption}" \
            "${memefile}"
  fi
}

file-to-clipboard() {
  # Use an applescript to read the meme jpeg into the system clipbaord.
  local memefile="/tmp/smash.jpg"
  osascript \
    -e 'on run args' \
    -e 'set the clipboard to (read (POSIX file (first item of args)) as JPEG picture)' \
    -e end \
    "${memefile}"
}

main() {
  parse-args "${@}"
  setup-vars
  make_meme "${_MESSAGE}"
  file-to-clipboard
}

if [[ "${BASH_SOURCE[0]}" = "${0}" ]]; then
  main "${@}"
fi

# Local Variables:
# mode: shell-script
# sh-basic-offset: 2
# End:
