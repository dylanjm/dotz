#!/usr/bin/env bash
#
#    ad88                    88
#   d8"                      88
#   88                       88
# MM88MMM 88,dPYba,,adPYba,  88,dPPYba,  ,adPPYba,
#   88    88P'   "88"    "8a 88P'    "8a I8[    ""
#   88    88      88      88 88       d8  `"Y8ba,
#   88    88      88      88 88b,   ,a8" aa    ]8I
#   88    88      88      88 8Y"Ybbd8"'  `"YbbdP"'
#
# fmbs - Script to fix duplicate UIDs created by mbsync.
#
# Usage:
#    fmbs [-h] [-n]
#
# Depends on:
#
# Example:
#
# Submit issues to https://github.com/dylanm/teton/issues
#
# MIT License
#
# Copyright (c) 2019-2020 Dylan McDowell
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

# Notes ################################################################

# Globals ##############################################################
readonly _ME=$(basename "${0}")

readonly NORMAL='\033[0m'
readonly RED='\033[1;31m'
readonly GREEN='\033[1;32m'
readonly BLUE='\033[1;34m'
readonly YELLOW='\033[1;33m'
readonly BOLD='\033[1m'

# Utilities ############################################################

magenta() { echo "${MAGENTA}$*${NORMAL}"; }
yellow() { echo "${YELLOW}$*${NORMAL}"; }
green() { echo "${GREEN}$*${NORMAL}"; }
blue() { echo "${BLUE}$*${NORMAL}"; }
red() { echo "${RED}$*${NORMAL}"; }
bold() { echo "${BOLD}$*${NORMAL}"; }

usage() {
  cat <<-HEREDOC
	$(echo -e "$(bold "fmbs (Fix MBSync)")"):
	Script to fix duplicate UIDs created by mbsync.

	$(echo -e "$(yellow "Usage")"):
	    ${_ME} [-h] [-n]

	$(echo -e "$(yellow "Options")"):
	    -h  Display this help information.
	    -n  Dry run to show which files will be changed.
	HEREDOC
}

get_args() {
  while getopts ":hn" flag; do
    case "$flag" in
      h)
        usage
        exit 0
        ;;
      n)
        dry_run=1
        ;;
      \?)
        printf "Usage: fmbs [-h] [-n]"
        exit 1
        ;;
    esac
  done
}

_main() {
  get_args "${@}"

  mapfile -t x < <(fd | grep -o 'U=.*:' | sort -k1.3n | uniq -d)

  local i
  for i in "${x[@]}"; do
    y="$(fd ".*${i}" --exec gstat -c '%X %n' \; | sort -nr | awk 'NR==1 {print $2}')"
    newy="${y/,*}"
    if [[ "$dry_run" -eq "1" ]]; then
      printf "%-52b-> %-52b\n" "$(yellow "${y}")" "$(blue "${newy}")"
    else
      printf "%-52b%b %-52b\n" "$(yellow "${y}")" "$(red "--moving->")" "$(blue "${newy}")"
      mv "$y" "$newy"
    fi
  done
}

if [[ "${BASH_SOURCE[0]}" = "${0}" ]]; then
  _main "${@}"
fi

# Local Variables:
# mode: shell-script
# sh-basic-offset: 2
# End:
