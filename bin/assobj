#!/usr/bin/env bash

_ME=$(basename "${0}")

NORMAL='\033[0m'
RED='\033[1;31m'
GREEN='\033[1;32m'
BLUE='\033[1;34m'
YELLOW='\033[1;33m'

yellow() { echo "${YELLOW}$*${NORMAL}"; }
green() { echo "${GREEN}$*${NORMAL}"; }
blue() { echo "${BLUE}$*${NORMAL}"; }
red() { echo "${RED}$*${NORMAL}"; }
magenta() { echo "${MAGENTA}$*${NORMAL}"; }
bold() { echo "${BOLD}$*${NORMAL}"; }

usage() {
    cat <<HEREDOC
$(echo -e "$(red "
                      _     _
   __ _ ___ ___  ___ | |__ (_)
  / _' / __/ __|/ _ \| '_ \| |
 | (_| \__ \__ \ (_) | |_) | |
  \__,_|___/___/\___/|_.__// |
                         |__/
")")
Assessment Objects - Script that maps assessment test objects
to respective input file names.
$(echo -e "$(yellow "Usage")"):
  ${_ME} [-h] [-n]
$(echo -e "$(green "Options")"):
  -h  Display this help information.
  -n  Dry run to show which files will be changed.
HEREDOC
}

get_args() {
    while getopts ":hn" flag; do
        case "$flag" in
        h)
            usage
            exit 1
            ;;
        n)
            dry_run=1
            ;;
        \?)
            printf "Usage: %s [-h] [-n]\n" "${_ME}"
            exit 1
            ;;
        esac
    done
}

get_input_files() {
    mapfile -t __FILES < <(fd -e i . "$HOME/Documents/projects/bison/assessment/LWR/validation" --exec printf "%s\n" "{}";)

    for i in "${__FILES[@]}"; do
        printf "%b\n" "$(blue "${i}")"
        ./bison-opt -i "${i}" --list-constructed-objects |
            awk '/^\*\*START OBJECT DATA\*\*$/{flag=1;next} /^\*\*END OBJECT DATA\*\*$/{flag=0} flag'
    done
}

main() {

    get_args "${@}"

    get_input_files
}

main "${@}"
