#!/usr/bin/env bash

_ME=$(basename "${0}")

NORMAL='\033[0m'
RED='\033[1;31m'
GREEN='\033[1;32m'
BLUE='\033[1;34m'
YELLOW='\033[1;33m'

yellow() { echo "${YELLOW}$*${NORMAL}"; }
green() { echo "${GREEN}$*${NORMAL}"; }
blue() { echo "${BLUE}$*${NORMAL}"; }
red() { echo "${RED}$*${NORMAL}"; }
magenta() { echo "${MAGENTA}$*${NORMAL}"; }
bold() { echo "${BOLD}$*${NORMAL}"; }

usage() {
    cat <<HEREDOC
$(echo -e "$(red "
  _______  _______  ______   _______
 (  ____ \(       )(  ___ \ (  ____ \.
 | (    \/| () () || (   ) )| (    \/
 | (__    | || || || (__/ / | (_____
 |  __)   | |(_)| ||  __ (  (_____  )
 | (      | |   | || (  \ \       ) |
 | )      | )   ( || )___) )/\____) |
 |/       |/     \||/ \___/ \_______)
")")
Fix MBSync - Script to fix duplicate UIDs
from mbsync by renaming most recent duplicated
UID emails.
$(echo -e "$(yellow "Usage")"):
  ${_ME} [-h] [-n]
$(echo -e "$(green "Options")"):
  -h  Display this help information.
  -n  Dry run to show which files will be changed.
HEREDOC
}

get_args() {
    while getopts ":hn" flag; do
        case "$flag" in
        h)
            usage
            exit 1
            ;;
        n)
            dry_run=1
            ;;
        \?)
            printf "Usage: fmbs [-h] [-n]"
            exit 1
            ;;
        esac
    done
}

_main() {
    get_args "${@}"

    mapfile -t x < <(fd | grep -o 'U=.*:' | sort -k1.3n | uniq -d)

    for i in "${x[@]}"; do
        y="$(fd ".*${i}" --exec gstat -c '%X %n' \; | sort -nr | awk 'NR==1 {print $2}')"
        newy="${y/,*}"
        if [[ "$dry_run" -eq "1" ]]; then
            printf "%-52b-> %-52b\n" "$(yellow "${y}")" "$(blue "${newy}")"
        else
            printf "%-52b%b %-52b\n" "$(yellow "${y}")" "$(red "--moving->")" "$(blue "${newy}")"
            mv "$y" "$newy"
        fi
    done
}

_main "${@}"
