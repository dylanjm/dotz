#!/bin/bash
RED='\033[0;31m'
NC='\033[0m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'

dry_run=0
yesterday=1

# Establish -n flag means to do a dry run.
while getopts "ny:" flag; do
    case "$flag" in
	    n) dry_run=1 ;;
	    y) yesterday=${OPTARG} ;;
	    *) echo 'error in command line parsing' >&2
	       exit 1
    esac
done
shift $(($OPTIND-1))

folder=${1:?"You must define a folder of interest"}

# Grab the most recently updated bison file off of Falcon1; return as string
# in the form of bison_XXXXXXXX/assessment/LWR/validation/
bison_latest_run=$(
    ssh -qn mcdodyla@falcon1 'find /projects/bison/git/* -mindepth 0 -maxdepth 0 -type d -printf "%T@\t%f\n"' |
	    sort -t$'\t' -r -nk1,5 |
	    sed -n "$yesterday"p |
	    cut -f2-)

bison_remote_path=$(
    echo $bison_latest_run |
        awk -v folder="$folder" '{print "/projects/bison/git/"$1"/assessment/LWR/validation/"folder}'
    )

bison_remote_files=($(ssh -qn mcdodyla@falcon1 \
		  "find $bison_remote_path -type f -name '*_out.csv' -not -path '*/doc/*' 2>/dev/null"))

# Maninpulate file paths to match the local machine directory
local_file_path=($(for i in "${bison_remote_files[@]}"; do
		           echo $i |
		               gsed -E "s|/projects/bison/git/bison_[0-9]{8}|/Users/mcdodj/Documents/projects/bison|g"
	           done
	         ))

# Check to see if dry-run, if not proceed with copying the files over. 
if [ "$dry_run" -eq 1 ]; then
    printf "${YELLOW}Initiating Dry-Run (Grabbing files from ${GREEN}${bison_latest_run}/${YELLOW}):${NC}\n"
    for ((i=0; i<${#bison_remote_files[@]}; i++)); do
	    printf "${RED}Remote File ->${NC} ${bison_remote_files[i]}\n"
	    printf "${GREEN}Local File ->${NC} ${local_file_path[i]}\n"
	    printf "\n"
    done
else
    printf "${YELLOW}Fetching Data from ${NC}(${GREEN}${bison_latest_run}${NC})${YELLOW}...${NC}\n"
    
    for ((i=0; i<${#NEW_RFILEP[@]}; i++)); do
        
	    scp -qp mcdodyla@falcon1:"${NEW_RFILEP[i]}" "${LOCAL_FILEP[i]}"
        
	    if [ ${PIPESTATUS[0]} -eq 0 ]; then      
            printf "${GREEN}File Created/Updated at:${NC} ${LOCAL_FILEP[i]}\n"
	    else
            printf "${RED}Error Fetching File:${NC} ${NEW_RFILEP[i]}\n"
	    fi
    done
	printf "${YELLOW}Bison Remote Fetch Complete!${NC}\n"
fi
									 

