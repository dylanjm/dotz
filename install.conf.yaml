- defaults:
    link:
      relink: true
      force: true
      create: true
    clean:
      force: true

- clean: ["~"]

- shell:
    - command: >
        if [ "$(xcode-select -p 2>/dev/null; echo $?)" = "2" ]; then
        echo "Installing Xcode Command Line Tools for you.";
        touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress;
        PROD=$(softwareupdate -l |
        grep "\*.*Command Line" |
        head -n 1 | awk -F"*" '{print $2}' |
        sed -e 's/^ *//' |
        tr -d '\n')
        softwareupdate -i "$PROD" --verbose;
        rm /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress;
        else
        echo "Xcode Tools Already Installed...";
        fi
      stdout: true
      stdin: false
      description: Checking for Xcode Command Line Tools
      quiet: true
    - command: >
        if [[ ! -e "$(which brew)" ]]; then
        echo "Homebrew not found. Installing Now...";
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)";
        else
        echo "Homebrew Installed. Updating Now...";
        brew upgrade;
        fi
      stdout: true
      stdin: false
      description: Checking Homebrew Installation
      quiet: true
    - command: >-
        if ! grep -Fxq "/usr/local/bin/zsh" /etc/shells; then
        echo "Adding /usr/local/bin/zsh to /etc/shells file";
        echo '/usr/local/bin/zsh' | sudo tee -a /etc/shells;
        else
        echo "/usr/local/bin/zsh already in /etc/shells...";
        fi
      stdin: true
      stdout: true
      description: Checking /etc/shells for /usr/local/bin/zsh
      quiet: true
    - command: >-
        if [ "$SHELL" != "/usr/local/bin/zsh" ]; then
        chsh -s /usr/local/bin/zsh
        echo "ZSH is now your default shell. Please restart your terminal once this script has finished";
        else
        echo "ZSH is already the default shell...";
        fi
      stdin: true
      stdout: true
      description: Changing Default Shell to ZSH
      quiet: true
    - command: brew bundle --file=$DOTFILES/bootstrap/Brewfile
      stdout: true
      stdin: false
      description: Installing all Homebrew Dependencies
      quiet: true

- link:
    ~/.zshrc: shells/zsh/zshrc.zsh
    ~/.zshenv: shells/zsh/zshenv.zsh
    ~/.emacs.d: editors/emacs.d
    ~/.gitconfig: git/gitconfig
    ~/.gitignore: git/gitignore

- shell:
    - [git submodule update --init --recursive, Installing submodules]
